version: '3.8'

services:
  kormit-db:
    image: postgres:13-alpine
    container_name: kormit-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=kormit
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d kormit"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kormit-network

  kormit-backend:
    image: ${BACKEND_IMAGE:-ghcr.io/kormit-panel/kormit/kormit-backend:latest}
    container_name: kormit-backend
    restart: unless-stopped
    depends_on:
      - kormit-db
    environment:
      - KORMIT_DB_CONNECTION=postgres://user:pass@kormit-db:5432/kormit
      - KORMIT_SECRET_KEY=production-secret-key-replace-this
    networks:
      - kormit-network
    volumes:
      - backend_config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3

  kormit-frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/kormit-panel/kormit/kormit-frontend:latest}
    container_name: kormit-frontend
    restart: unless-stopped
    depends_on:
      - kormit-backend
    networks:
      - kormit-network

  kormit-proxy:
    image: nginx:alpine
    container_name: kormit-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - kormit-backend
      - kormit-frontend
    networks:
      - kormit-network

volumes:
  postgres_data:
  backend_config:

networks:
  kormit-network:
    driver: bridge
