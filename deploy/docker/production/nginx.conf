# Kormit Nginx Konfiguration
# HTTP-only Version

log_format kormit_log '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

# Upstream-Definitionen für Load Balancing
upstream kormit_backend {
    server kormit-backend:8080;
}

upstream kormit_frontend {
    server kormit-frontend:80;
}

# HTTP-Server
server {
    listen 80;
    listen [::]:80;
    server_name localhost default_server;
    
    access_log /var/log/nginx/access.log kormit_log;
    error_log /var/log/nginx/error.log warn;
    
    # Client-Body-Größe erhöhen für Uploads
    client_max_body_size 50M;
    
    # Gzip-Kompression aktivieren
    gzip on;
    gzip_types text/plain text/css application/javascript application/json application/xml;
    gzip_min_length 1000;
    
    # Cache-Header für statische Assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
        
        # Erst Frontend für statische Assets prüfen
        proxy_pass http://kormit_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Frontend-Routing (Vue Router History Mode)
    location / {
        proxy_pass http://kormit_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Wichtig für Vue Router History Mode
        try_files $uri $uri/ /index.html;
    }
    
    # API-Anfragen zum Backend weiterleiten
    location /api/ {
        proxy_pass http://kormit_backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS-Header hinzufügen
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Preflight-Anfragen behandeln
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Timeout-Einstellungen für API-Anfragen
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }
    
    # Websocket-Support für Live-Updates
    location /ws {
        proxy_pass http://kormit_backend/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Gesundheitscheck-Endpunkt
    location /health {
        add_header Content-Type text/plain;
        return 200 'OK';
    }
}